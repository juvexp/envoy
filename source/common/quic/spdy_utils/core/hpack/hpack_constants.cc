// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "common/quic/spdy_utils/core/hpack/hpack_constants.h"

#include <cstddef>
#include <memory>

#include "base/logging.h"
#include "base/once.h"
#include "common/quic/spdy_utils/core/hpack/hpack_huffman_table.h"
#include "common/quic/spdy_utils/core/hpack/hpack_static_table.h"
#include "common/quic/spdy_utils/platform/api/spdy_ptr_util.h"

namespace gfe_spdy {

// Produced by applying the python program [1] to tables provided by [2].
// [1]
// import re, sys
// count = 0
// for l in sys.stdin:
//   m = re.match(
//     r"^ +('.+'|EOS)? \( *(\d+)\)  \|([10\|]+) +\w+  \[ ?(\d+)\]", l)
//   if m:
//     g = m.groups()
//     print('  {0b%s, %02s, %03s},%s' % (
//       g[2].replace('|','').ljust(32,'0'), g[3], g[1],
//       ('  // %s' % g[0]) if g[0] else ''))
//     count += 1
// print("Total: %s" % count)
//
// [2] http://tools.ietf.org/html/draft-ietf-httpbis-header-compression-08

// HpackHuffmanSymbol entries are initialized as {code, length, id}.
// Codes are specified in the |length| most-significant bits of |code|.
// clang-format off
const HpackHuffmanSymbol kHpackHuffmanCode[] = {
  {0b11111111110000000000000000000000, 13,   0},
  {0b11111111111111111011000000000000, 23,   1},
  {0b11111111111111111111111000100000, 28,   2},
  {0b11111111111111111111111000110000, 28,   3},
  {0b11111111111111111111111001000000, 28,   4},
  {0b11111111111111111111111001010000, 28,   5},
  {0b11111111111111111111111001100000, 28,   6},
  {0b11111111111111111111111001110000, 28,   7},
  {0b11111111111111111111111010000000, 28,   8},
  {0b11111111111111111110101000000000, 24,   9},
  {0b11111111111111111111111111110000, 30,  10},
  {0b11111111111111111111111010010000, 28,  11},
  {0b11111111111111111111111010100000, 28,  12},
  {0b11111111111111111111111111110100, 30,  13},
  {0b11111111111111111111111010110000, 28,  14},
  {0b11111111111111111111111011000000, 28,  15},
  {0b11111111111111111111111011010000, 28,  16},
  {0b11111111111111111111111011100000, 28,  17},
  {0b11111111111111111111111011110000, 28,  18},
  {0b11111111111111111111111100000000, 28,  19},
  {0b11111111111111111111111100010000, 28,  20},
  {0b11111111111111111111111100100000, 28,  21},
  {0b11111111111111111111111111111000, 30,  22},
  {0b11111111111111111111111100110000, 28,  23},
  {0b11111111111111111111111101000000, 28,  24},
  {0b11111111111111111111111101010000, 28,  25},
  {0b11111111111111111111111101100000, 28,  26},
  {0b11111111111111111111111101110000, 28,  27},
  {0b11111111111111111111111110000000, 28,  28},
  {0b11111111111111111111111110010000, 28,  29},
  {0b11111111111111111111111110100000, 28,  30},
  {0b11111111111111111111111110110000, 28,  31},
  {0b01010000000000000000000000000000,  6,  32},  // ' '
  {0b11111110000000000000000000000000, 10,  33},  // '!'
  {0b11111110010000000000000000000000, 10,  34},  // '"'
  {0b11111111101000000000000000000000, 12,  35},  // '#'
  {0b11111111110010000000000000000000, 13,  36},  // '$'
  {0b01010100000000000000000000000000,  6,  37},  // '%'
  {0b11111000000000000000000000000000,  8,  38},  // '&'
  {0b11111111010000000000000000000000, 11,  39},  // '''
  {0b11111110100000000000000000000000, 10,  40},  // '('
  {0b11111110110000000000000000000000, 10,  41},  // ')'
  {0b11111001000000000000000000000000,  8,  42},  // '*'
  {0b11111111011000000000000000000000, 11,  43},  // '+'
  {0b11111010000000000000000000000000,  8,  44},  // ','
  {0b01011000000000000000000000000000,  6,  45},  // '-'
  {0b01011100000000000000000000000000,  6,  46},  // '.'
  {0b01100000000000000000000000000000,  6,  47},  // '/'
  {0b00000000000000000000000000000000,  5,  48},  // '0'
  {0b00001000000000000000000000000000,  5,  49},  // '1'
  {0b00010000000000000000000000000000,  5,  50},  // '2'
  {0b01100100000000000000000000000000,  6,  51},  // '3'
  {0b01101000000000000000000000000000,  6,  52},  // '4'
  {0b01101100000000000000000000000000,  6,  53},  // '5'
  {0b01110000000000000000000000000000,  6,  54},  // '6'
  {0b01110100000000000000000000000000,  6,  55},  // '7'
  {0b01111000000000000000000000000000,  6,  56},  // '8'
  {0b01111100000000000000000000000000,  6,  57},  // '9'
  {0b10111000000000000000000000000000,  7,  58},  // ':'
  {0b11111011000000000000000000000000,  8,  59},  // ';'
  {0b11111111111110000000000000000000, 15,  60},  // '<'
  {0b10000000000000000000000000000000,  6,  61},  // '='
  {0b11111111101100000000000000000000, 12,  62},  // '>'
  {0b11111111000000000000000000000000, 10,  63},  // '?'
  {0b11111111110100000000000000000000, 13,  64},  // '@'
  {0b10000100000000000000000000000000,  6,  65},  // 'A'
  {0b10111010000000000000000000000000,  7,  66},  // 'B'
  {0b10111100000000000000000000000000,  7,  67},  // 'C'
  {0b10111110000000000000000000000000,  7,  68},  // 'D'
  {0b11000000000000000000000000000000,  7,  69},  // 'E'
  {0b11000010000000000000000000000000,  7,  70},  // 'F'
  {0b11000100000000000000000000000000,  7,  71},  // 'G'
  {0b11000110000000000000000000000000,  7,  72},  // 'H'
  {0b11001000000000000000000000000000,  7,  73},  // 'I'
  {0b11001010000000000000000000000000,  7,  74},  // 'J'
  {0b11001100000000000000000000000000,  7,  75},  // 'K'
  {0b11001110000000000000000000000000,  7,  76},  // 'L'
  {0b11010000000000000000000000000000,  7,  77},  // 'M'
  {0b11010010000000000000000000000000,  7,  78},  // 'N'
  {0b11010100000000000000000000000000,  7,  79},  // 'O'
  {0b11010110000000000000000000000000,  7,  80},  // 'P'
  {0b11011000000000000000000000000000,  7,  81},  // 'Q'
  {0b11011010000000000000000000000000,  7,  82},  // 'R'
  {0b11011100000000000000000000000000,  7,  83},  // 'S'
  {0b11011110000000000000000000000000,  7,  84},  // 'T'
  {0b11100000000000000000000000000000,  7,  85},  // 'U'
  {0b11100010000000000000000000000000,  7,  86},  // 'V'
  {0b11100100000000000000000000000000,  7,  87},  // 'W'
  {0b11111100000000000000000000000000,  8,  88},  // 'X'
  {0b11100110000000000000000000000000,  7,  89},  // 'Y'
  {0b11111101000000000000000000000000,  8,  90},  // 'Z'
  {0b11111111110110000000000000000000, 13,  91},  // '['
  {0b11111111111111100000000000000000, 19,  92},  // '\'
  {0b11111111111000000000000000000000, 13,  93},  // ']'
  {0b11111111111100000000000000000000, 14,  94},  // '^'
  {0b10001000000000000000000000000000,  6,  95},  // '_'
  {0b11111111111110100000000000000000, 15,  96},  // '`'
  {0b00011000000000000000000000000000,  5,  97},  // 'a'
  {0b10001100000000000000000000000000,  6,  98},  // 'b'
  {0b00100000000000000000000000000000,  5,  99},  // 'c'
  {0b10010000000000000000000000000000,  6, 100},  // 'd'
  {0b00101000000000000000000000000000,  5, 101},  // 'e'
  {0b10010100000000000000000000000000,  6, 102},  // 'f'
  {0b10011000000000000000000000000000,  6, 103},  // 'g'
  {0b10011100000000000000000000000000,  6, 104},  // 'h'
  {0b00110000000000000000000000000000,  5, 105},  // 'i'
  {0b11101000000000000000000000000000,  7, 106},  // 'j'
  {0b11101010000000000000000000000000,  7, 107},  // 'k'
  {0b10100000000000000000000000000000,  6, 108},  // 'l'
  {0b10100100000000000000000000000000,  6, 109},  // 'm'
  {0b10101000000000000000000000000000,  6, 110},  // 'n'
  {0b00111000000000000000000000000000,  5, 111},  // 'o'
  {0b10101100000000000000000000000000,  6, 112},  // 'p'
  {0b11101100000000000000000000000000,  7, 113},  // 'q'
  {0b10110000000000000000000000000000,  6, 114},  // 'r'
  {0b01000000000000000000000000000000,  5, 115},  // 's'
  {0b01001000000000000000000000000000,  5, 116},  // 't'
  {0b10110100000000000000000000000000,  6, 117},  // 'u'
  {0b11101110000000000000000000000000,  7, 118},  // 'v'
  {0b11110000000000000000000000000000,  7, 119},  // 'w'
  {0b11110010000000000000000000000000,  7, 120},  // 'x'
  {0b11110100000000000000000000000000,  7, 121},  // 'y'
  {0b11110110000000000000000000000000,  7, 122},  // 'z'
  {0b11111111111111000000000000000000, 15, 123},  // '{'
  {0b11111111100000000000000000000000, 11, 124},  // '|'
  {0b11111111111101000000000000000000, 14, 125},  // '}'
  {0b11111111111010000000000000000000, 13, 126},  // '~'
  {0b11111111111111111111111111000000, 28, 127},
  {0b11111111111111100110000000000000, 20, 128},
  {0b11111111111111110100100000000000, 22, 129},
  {0b11111111111111100111000000000000, 20, 130},
  {0b11111111111111101000000000000000, 20, 131},
  {0b11111111111111110100110000000000, 22, 132},
  {0b11111111111111110101000000000000, 22, 133},
  {0b11111111111111110101010000000000, 22, 134},
  {0b11111111111111111011001000000000, 23, 135},
  {0b11111111111111110101100000000000, 22, 136},
  {0b11111111111111111011010000000000, 23, 137},
  {0b11111111111111111011011000000000, 23, 138},
  {0b11111111111111111011100000000000, 23, 139},
  {0b11111111111111111011101000000000, 23, 140},
  {0b11111111111111111011110000000000, 23, 141},
  {0b11111111111111111110101100000000, 24, 142},
  {0b11111111111111111011111000000000, 23, 143},
  {0b11111111111111111110110000000000, 24, 144},
  {0b11111111111111111110110100000000, 24, 145},
  {0b11111111111111110101110000000000, 22, 146},
  {0b11111111111111111100000000000000, 23, 147},
  {0b11111111111111111110111000000000, 24, 148},
  {0b11111111111111111100001000000000, 23, 149},
  {0b11111111111111111100010000000000, 23, 150},
  {0b11111111111111111100011000000000, 23, 151},
  {0b11111111111111111100100000000000, 23, 152},
  {0b11111111111111101110000000000000, 21, 153},
  {0b11111111111111110110000000000000, 22, 154},
  {0b11111111111111111100101000000000, 23, 155},
  {0b11111111111111110110010000000000, 22, 156},
  {0b11111111111111111100110000000000, 23, 157},
  {0b11111111111111111100111000000000, 23, 158},
  {0b11111111111111111110111100000000, 24, 159},
  {0b11111111111111110110100000000000, 22, 160},
  {0b11111111111111101110100000000000, 21, 161},
  {0b11111111111111101001000000000000, 20, 162},
  {0b11111111111111110110110000000000, 22, 163},
  {0b11111111111111110111000000000000, 22, 164},
  {0b11111111111111111101000000000000, 23, 165},
  {0b11111111111111111101001000000000, 23, 166},
  {0b11111111111111101111000000000000, 21, 167},
  {0b11111111111111111101010000000000, 23, 168},
  {0b11111111111111110111010000000000, 22, 169},
  {0b11111111111111110111100000000000, 22, 170},
  {0b11111111111111111111000000000000, 24, 171},
  {0b11111111111111101111100000000000, 21, 172},
  {0b11111111111111110111110000000000, 22, 173},
  {0b11111111111111111101011000000000, 23, 174},
  {0b11111111111111111101100000000000, 23, 175},
  {0b11111111111111110000000000000000, 21, 176},
  {0b11111111111111110000100000000000, 21, 177},
  {0b11111111111111111000000000000000, 22, 178},
  {0b11111111111111110001000000000000, 21, 179},
  {0b11111111111111111101101000000000, 23, 180},
  {0b11111111111111111000010000000000, 22, 181},
  {0b11111111111111111101110000000000, 23, 182},
  {0b11111111111111111101111000000000, 23, 183},
  {0b11111111111111101010000000000000, 20, 184},
  {0b11111111111111111000100000000000, 22, 185},
  {0b11111111111111111000110000000000, 22, 186},
  {0b11111111111111111001000000000000, 22, 187},
  {0b11111111111111111110000000000000, 23, 188},
  {0b11111111111111111001010000000000, 22, 189},
  {0b11111111111111111001100000000000, 22, 190},
  {0b11111111111111111110001000000000, 23, 191},
  {0b11111111111111111111100000000000, 26, 192},
  {0b11111111111111111111100001000000, 26, 193},
  {0b11111111111111101011000000000000, 20, 194},
  {0b11111111111111100010000000000000, 19, 195},
  {0b11111111111111111001110000000000, 22, 196},
  {0b11111111111111111110010000000000, 23, 197},
  {0b11111111111111111010000000000000, 22, 198},
  {0b11111111111111111111011000000000, 25, 199},
  {0b11111111111111111111100010000000, 26, 200},
  {0b11111111111111111111100011000000, 26, 201},
  {0b11111111111111111111100100000000, 26, 202},
  {0b11111111111111111111101111000000, 27, 203},
  {0b11111111111111111111101111100000, 27, 204},
  {0b11111111111111111111100101000000, 26, 205},
  {0b11111111111111111111000100000000, 24, 206},
  {0b11111111111111111111011010000000, 25, 207},
  {0b11111111111111100100000000000000, 19, 208},
  {0b11111111111111110001100000000000, 21, 209},
  {0b11111111111111111111100110000000, 26, 210},
  {0b11111111111111111111110000000000, 27, 211},
  {0b11111111111111111111110000100000, 27, 212},
  {0b11111111111111111111100111000000, 26, 213},
  {0b11111111111111111111110001000000, 27, 214},
  {0b11111111111111111111001000000000, 24, 215},
  {0b11111111111111110010000000000000, 21, 216},
  {0b11111111111111110010100000000000, 21, 217},
  {0b11111111111111111111101000000000, 26, 218},
  {0b11111111111111111111101001000000, 26, 219},
  {0b11111111111111111111111111010000, 28, 220},
  {0b11111111111111111111110001100000, 27, 221},
  {0b11111111111111111111110010000000, 27, 222},
  {0b11111111111111111111110010100000, 27, 223},
  {0b11111111111111101100000000000000, 20, 224},
  {0b11111111111111111111001100000000, 24, 225},
  {0b11111111111111101101000000000000, 20, 226},
  {0b11111111111111110011000000000000, 21, 227},
  {0b11111111111111111010010000000000, 22, 228},
  {0b11111111111111110011100000000000, 21, 229},
  {0b11111111111111110100000000000000, 21, 230},
  {0b11111111111111111110011000000000, 23, 231},
  {0b11111111111111111010100000000000, 22, 232},
  {0b11111111111111111010110000000000, 22, 233},
  {0b11111111111111111111011100000000, 25, 234},
  {0b11111111111111111111011110000000, 25, 235},
  {0b11111111111111111111010000000000, 24, 236},
  {0b11111111111111111111010100000000, 24, 237},
  {0b11111111111111111111101010000000, 26, 238},
  {0b11111111111111111110100000000000, 23, 239},
  {0b11111111111111111111101011000000, 26, 240},
  {0b11111111111111111111110011000000, 27, 241},
  {0b11111111111111111111101100000000, 26, 242},
  {0b11111111111111111111101101000000, 26, 243},
  {0b11111111111111111111110011100000, 27, 244},
  {0b11111111111111111111110100000000, 27, 245},
  {0b11111111111111111111110100100000, 27, 246},
  {0b11111111111111111111110101000000, 27, 247},
  {0b11111111111111111111110101100000, 27, 248},
  {0b11111111111111111111111111100000, 28, 249},
  {0b11111111111111111111110110000000, 27, 250},
  {0b11111111111111111111110110100000, 27, 251},
  {0b11111111111111111111110111000000, 27, 252},
  {0b11111111111111111111110111100000, 27, 253},
  {0b11111111111111111111111000000000, 27, 254},
  {0b11111111111111111111101110000000, 26, 255},
  {0b11111111111111111111111111111100, 30, 256},  // EOS
};
// clang-format on

// The "constructor" for a HpackStaticEntry that computes the lengths at
// compile time.
#define STATIC_ENTRY(name, value) \
  { name, arraysize(name) - 1, value, arraysize(value) - 1 }

const HpackStaticEntry kHpackStaticTable[] = {
    STATIC_ENTRY(":authority", ""),                    // 1
    STATIC_ENTRY(":method", "GET"),                    // 2
    STATIC_ENTRY(":method", "POST"),                   // 3
    STATIC_ENTRY(":path", "/"),                        // 4
    STATIC_ENTRY(":path", "/index.html"),              // 5
    STATIC_ENTRY(":scheme", "http"),                   // 6
    STATIC_ENTRY(":scheme", "https"),                  // 7
    STATIC_ENTRY(":status", "200"),                    // 8
    STATIC_ENTRY(":status", "204"),                    // 9
    STATIC_ENTRY(":status", "206"),                    // 10
    STATIC_ENTRY(":status", "304"),                    // 11
    STATIC_ENTRY(":status", "400"),                    // 12
    STATIC_ENTRY(":status", "404"),                    // 13
    STATIC_ENTRY(":status", "500"),                    // 14
    STATIC_ENTRY("accept-charset", ""),                // 15
    STATIC_ENTRY("accept-encoding", "gzip, deflate"),  // 16
    STATIC_ENTRY("accept-language", ""),               // 17
    STATIC_ENTRY("accept-ranges", ""),                 // 18
    STATIC_ENTRY("accept", ""),                        // 19
    STATIC_ENTRY("access-control-allow-origin", ""),   // 20
    STATIC_ENTRY("age", ""),                           // 21
    STATIC_ENTRY("allow", ""),                         // 22
    STATIC_ENTRY("authorization", ""),                 // 23
    STATIC_ENTRY("cache-control", ""),                 // 24
    STATIC_ENTRY("content-disposition", ""),           // 25
    STATIC_ENTRY("content-encoding", ""),              // 26
    STATIC_ENTRY("content-language", ""),              // 27
    STATIC_ENTRY("content-length", ""),                // 28
    STATIC_ENTRY("content-location", ""),              // 29
    STATIC_ENTRY("content-range", ""),                 // 30
    STATIC_ENTRY("content-type", ""),                  // 31
    STATIC_ENTRY("cookie", ""),                        // 32
    STATIC_ENTRY("date", ""),                          // 33
    STATIC_ENTRY("etag", ""),                          // 34
    STATIC_ENTRY("expect", ""),                        // 35
    STATIC_ENTRY("expires", ""),                       // 36
    STATIC_ENTRY("from", ""),                          // 37
    STATIC_ENTRY("host", ""),                          // 38
    STATIC_ENTRY("if-match", ""),                      // 39
    STATIC_ENTRY("if-modified-since", ""),             // 40
    STATIC_ENTRY("if-none-match", ""),                 // 41
    STATIC_ENTRY("if-range", ""),                      // 42
    STATIC_ENTRY("if-unmodified-since", ""),           // 43
    STATIC_ENTRY("last-modified", ""),                 // 44
    STATIC_ENTRY("link", ""),                          // 45
    STATIC_ENTRY("location", ""),                      // 46
    STATIC_ENTRY("max-forwards", ""),                  // 47
    STATIC_ENTRY("proxy-authenticate", ""),            // 48
    STATIC_ENTRY("proxy-authorization", ""),           // 49
    STATIC_ENTRY("range", ""),                         // 50
    STATIC_ENTRY("referer", ""),                       // 51
    STATIC_ENTRY("refresh", ""),                       // 52
    STATIC_ENTRY("retry-after", ""),                   // 53
    STATIC_ENTRY("server", ""),                        // 54
    STATIC_ENTRY("set-cookie", ""),                    // 55
    STATIC_ENTRY("strict-transport-security", ""),     // 56
    STATIC_ENTRY("transfer-encoding", ""),             // 57
    STATIC_ENTRY("user-agent", ""),                    // 58
    STATIC_ENTRY("vary", ""),                          // 59
    STATIC_ENTRY("via", ""),                           // 60
    STATIC_ENTRY("www-authenticate", ""),              // 61
};

#undef STATIC_ENTRY

namespace {

GoogleOnceType huffman_once = GOOGLE_ONCE_INIT;
GoogleOnceType static_once = GOOGLE_ONCE_INIT;

std::unique_ptr<HpackHuffmanTable> shared_huffman_table;
std::unique_ptr<HpackStaticTable> shared_static_table;

void InitializeSharedHuffmanTable() {
  shared_huffman_table = SpdyMakeUnique<HpackHuffmanTable>();
  CHECK(shared_huffman_table->Initialize(kHpackHuffmanCode,
                                         arraysize(kHpackHuffmanCode)));
  CHECK(shared_huffman_table->IsInitialized());
}

void InitializeSharedStaticTable() {
  shared_static_table = SpdyMakeUnique<HpackStaticTable>();
  shared_static_table->Initialize(kHpackStaticTable,
                                  arraysize(kHpackStaticTable));
  CHECK(shared_static_table->IsInitialized());
}

}  // namespace

const HpackHuffmanTable& ObtainHpackHuffmanTable() {
  GoogleOnceInit(&huffman_once, &InitializeSharedHuffmanTable);
  return *shared_huffman_table;
}

const HpackStaticTable& ObtainHpackStaticTable() {
  GoogleOnceInit(&static_once, &InitializeSharedStaticTable);
  return *shared_static_table;
}

}  // namespace gfe_spdy
