#!/usr/bin/python
"""Generates gn build configs to build cronet for various arm architectures."""

import argparse
import os
import shutil
import subprocess
import sys

CLANKIUM_SRC_DIR = 'CLANKIUM_SRC_DIR_PLACEHOLDER'


# Generates build configurations out/cronetspeedtest_arm64,
# and out/cronetspeedtest_armeabi-v7a by calling gn gen.
def main():
  parser = argparse.ArgumentParser()
  parser.add_argument(
      '-g',
      '--goma_dir',
      action='store',
      help='generated gn args will have goma enabled')
  options = parser.parse_args()

  os.chdir(CLANKIUM_SRC_DIR)

  # Extract the args generated by components/cronet/tools/cr_cronet.py
  subprocess.check_call([
      './components/cronet/tools/cr_cronet.py', '-d',
      'out/cronetspeedtest_temp', '-r', 'gn'
  ])
  with open('./out/cronetspeedtest_temp/args.gn') as f:
    lines = f.readlines()
  shutil.rmtree('./out/cronetspeedtest_temp', ignore_errors=True)
  args = ' '.join(line.strip() for line in lines)
  args = args.replace(' = ', '=')

  # Add args to use goma if needed
  if options.goma_dir:
    args += ' use_goma=true goma_dir=\"%s\"' % (options.goma_dir)

  # Add args needed for profiling
  args += ' symbol_level=2'

  arm64_args = args + ' target_cpu=\"arm64\"'
  subprocess.check_call(
      ['gn', 'gen', 'out/cronetspeedtest_arm64', '--args=' + arm64_args])

  armeabi_v7a_args = args + ' target_cpu=\"arm\" arm_version=7'
  subprocess.check_call([
      'gn', 'gen', 'out/cronetspeedtest_armeabi-v7a',
      '--args=' + armeabi_v7a_args
  ])


if __name__ == '__main__':
  sys.exit(main())
